Задача коммивояжера (TSP) - одна из самых известных оптимальных задач. Её цель - заключается в нахождении самого выгодного маршрута (кратчайшего, самого быстрого, наиболее дешёвого), проходящего через все заданные точки (пункты, города) по одному разу, с последующим возвратом в исходную точку.
Условия задачи обязательно должны содержать критерии выгодности маршрута (т.е. должен ли он быть максимально коротким, быстрым, дешёвым или всё вместе), а так же исходные данные в виде матрицы затрат (расстояния между пунктами, время и т.п.) при перемещении между рассматриваемыми пунктами.

Алгоритм Литтла
1. Построение матрицы с исходными данными.
2. Редукция строк и столбцов.
3. Нахождение стоимости корня – сумма штрафов редукций по строкам и столбцам.
4. Нахождение корневой нижней границы (H0) – сумма, которую мы обязательно потратим.
5. Оценка нулевых ячеек – сумма минимального значения столбца и минимального значения строки (кроме самого элемента).
6. Выбор нулевой ячейки с максимальной оценкой.
7. Редукция матриц – убираем ветвь из матрицы (вычеркиваем) и при наличии обратного пути ставим M – максимальное значение.
8. Вычисляем нижнюю границу ветви, в которой нет пути (Н1* = весу предыдущей вершины + максимальный штраф у нулевой ячейки).
И в которой есть путь (Н1 = весу предыдущей вершины + сумма редукции).
9. Выбираем ветвь с min значением нижней границы из не ветвившихся.
10. Если полный маршрут не найден, то решение продолжается (пока матрица не станет 1 на 1, где уже определена последняя ветвь)
 – выбор ветви, включающей рассматриваемый путь – продолжаем решение
 – выбор ветви, не включающей рассматриваемый путь – ставим в матрицу по этому пути M, делаем редукцию, а после заново пересчитываем оценку нулевых ячеек для выбора другого пути
 – выбор другой ветви – возвращаемся к прошлой матрице и пересчитываем
11. Построение полноценного маршрута и поиск его длины (целевой функции)
